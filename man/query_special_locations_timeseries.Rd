% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/query_special_locations_timeseries.R
\name{query_special_locations_timeseries}
\alias{query_special_locations_timeseries}
\title{Query a Time Series at Special Locations}
\usage{
query_special_locations_timeseries(
  startdate,
  enddate,
  interval,
  parameters,
  username,
  password,
  model = "mix",
  postal_codes = NULL,
  temporal_interpolation = NULL,
  spatial_interpolation = NULL,
  on_invalid = NULL,
  request_type = "GET"
)
}
\arguments{
\item{startdate}{An ISOdatetime of the format \%Y-\%m-\%dT\%H:\%M:\%OSZ. The start
date gets converted into UTC if another timezone is selected.}

\item{enddate}{An ISOdatetime of the format \%Y-\%m-\%dT\%H:\%M:\%OSZ. The end date
gets converted into UTC if another timezone is selected.}

\item{interval}{A character vector e.g. of the form "PT1H" specifying the
interval of the parameter.}

\item{parameters}{A list of strings containing the parameters of interest
list("t_2m:C", "dew_point_2m:C", "relative_humidity_1000hPa:p",
"precip_1h:mm").}

\item{username}{A character vector containing the MM API username.}

\item{password}{A character vector containing the MM API password.}

\item{model}{A character vector containing the model of interest. The default
value is NULL, meaning that the model mix is selected.}

\item{postal_codes}{A list of postal codes, e.g.: postal_codes = list('DE'= c(71679, 70173) ...).}

\item{temporal_interpolation}{This parameter specifies the temporal interpolation.
The default value is NULL which means the data is interpolated.
If no interpolation is needed, one can set
temporal_interpolation=none.}

\item{spatial_interpolation}{This parameter specifies the spatial interpolation.
The default value is NULL which means the data is interpolated.
If no interpolation is needed, one can set
spatial_interpolation=none.}

\item{on_invalid}{A character vector specifying the treatment of missing
weather station values. The default value is NULL. If
on_invalid = "fill_with_invalid", missing values are filled
with Na.}

\item{request_type}{A character vector containing the request type - either
"get" (Default) or "post".}
}
\value{
Retrieve a time series from the Meteomatics Weather API.
}
\description{
Retrieve a time series from the Meteomatics Weather API
}
\examples{
\dontrun{
username <- "r-community"
password <- "Utotugode673"
time_zone <- "UTC"
startdate <- ISOdatetime(year = as.integer(strftime(lubridate::today(), '\%Y')),
                         month = as.integer(strftime(lubridate::today(), '\%m')),
                         day = as.integer(strftime(lubridate::today(), '\%d')) - 1,
                         hour = 00, min = 00, sec = 00, tz = time_zone)
enddate <- ISOdatetime(year = as.integer(strftime(lubridate::today(), '\%Y')),
                       month = as.integer(strftime(lubridate::today(), '\%m')),
                       day = as.integer(strftime(lubridate::today(), '\%d')),
                       hour = 00, min = 00, sec = 00, tz = time_zone)
interval <- "PT1H"
parameters <- list("t_2m:C", "dew_point_2m:C", "relative_humidity_2m:p", "precip_1h:mm")
postal_code <- list('DE'= c(71679, 70173), 'CH' = c(9014, 9000))
special_timeseries <- query_special_locations_timeseries (startdate, enddate, interval,
                                                          parameters, username, password,
                                                          postal_code = postal_code,
                                                          on_invalid = "fill_with_invalid")
head(special_timeseries)
}
}
